############################################
# OPEN TELEMETRY TRACING EXPORTER SETTINGS #
############################################

# True to enable the Open Telemetry distributed tracing feature.
# Default value: false.
#mule.open.telemetry.exporter.enabled=${mule.open.telemetry.exporter.enabled}

#### EXPORT ENDPOINT SETTINGS:

# Whether to export using the GRPC or the HTTP transport.
# Available values: GRPC, HTTP.
# Default value: GRPC.
#mule.open.telemetry.exporter.type=${mule.open.telemetry.exporter.type}

# Endpoint where the traces will be exported to.
# Default value: http://localhost:4317 for GRPC, http://localhost:4318/v1/traces for HTTP.
#mule.open.telemetry.exporter.endpoint=${mule.open.telemetry.exporter.endpoint}

# key=value, comma separated list of headers that will be included on every export call made to the export endpoint.
# Default value: Empty list.
#mule.open.telemetry.exporter.headers=${mule.open.telemetry.exporter.headers}

# Timeout that will be used for every export call made to the export endpoint.
# Default value: 10 Seconds.
#mule.open.telemetry.exporter.timeout=${mule.open.telemetry.exporter.timeout}

# Compression algorithm that will be used to compress the tracing date to be sent on every export call made to the export endpoint.
# Available values: none, gzip.
# Default value: none.
#mule.open.telemetry.exporter.compression.type=${mule.open.telemetry.exporter.compression.type}

#### ENDPOINT SECURITY SETTINGS:

# True to enable the use of TLS for every export call made to the export endpoint.
# Default: false.
#mule.open.telemetry.exporter.tls.enabled=${mule.open.telemetry.exporter.tls.enabled}

# TLS certificate file path.
#mule.open.telemetry.exporter.cert.file.location=${mule.open.telemetry.exporter.cert.file.location}

# TLS certificate public key file path.
#mule.open.telemetry.exporter.key.file.location=${mule.open.telemetry.exporter.key.file.location}

# TLS certificate authority file path.
#mule.open.telemetry.exporter.ca.file.location=${mule.open.telemetry.exporter.ca.file.location}

# ENDPOINT EXPONENTIAL BACKOFF SETTINGS:

# Times that the exporter will retry to export a batch of spans when the export endpoint responds with a retryable error.
# Default value: 5
#mule.open.telemetry.exporter.backoff.max.attempts=${mule.open.telemetry.exporter.backoff.max.attempts}

# Time that the exporter will wait before the first retry attempt.
# Default value: 1 Second.
#mule.open.telemetry.exporter.backoff.initial=${mule.open.telemetry.exporter.backoff.initial}

# Maximum time that the exporter will wait before a retry attempt.
# Default value: 5 Seconds.
#mule.open.telemetry.exporter.backoff.max=${mule.open.telemetry.exporter.backoff.max}

# Multiplier that the exporter will apply to the last wait before a new retry attempt.
# Default value: 1.5
#mule.open.telemetry.exporter.backoff.multiplier=${mule.open.telemetry.exporter.backoff.multiplier}

# EXPORT QUEUE SETTINGS:

# The exporter will export the spans in batches of at least this size.
# Default value: 512 spans.
#mule.open.telemetry.exporter.batch.queue.size=${mule.open.telemetry.exporter.batch.queue.size}

# Export queue size.
# Default value: 2048 spans.
#mule.open.telemetry.exporter.batch.max.size=${mule.open.telemetry.exporter.batch.max.size}
